{
  "imputers": [
    {
      "name": "Simple",
      "class": "SimpleImputer",
      "params": [
        {
          "name": "strategy",
          "label": "Strategy",
          "description": "How existing votes in each statement column are used to generate missing votes in that column.",
          "values": ["mean", "median", "most_frequent"]
        }
      ]
    },
    {
      "name": "KNN",
      "class": "KNNImputer",
      "params": [
        {
          "name": "n_neighbors",
          "label": "Neighbors",
          "description": "Number of nearest neighbor participants from which to average each missing vote.",
          "values": [5, 10, 20]
        },
        {
          "name": "weights",
          "label": "Weighting",
          "description": "Whether calculated average of neighbors is distance-weighted or uniform.",
          "values": ["distance", "uniform"]
        }
      ]
    }
  ],

  "reducers": [
    {
      "name": "PCA",
      "class": "PCA",
      "params": [
        {
          "name": "n_components",
          "label": "Dimensions",
          "description": "Number of dimensions to reduce to.",
          "values": [2, 3],
          "format": "{val}D"
        }
      ]
    },
    {
      "name": "PaCMAP",
      "class": "PaCMAP",
      "params": [
        {
          "name": "n_components",
          "label": "Dimensions",
          "description": "Target number of output dimensions.",
          "values": [2, 3],
          "format": "{val}D"
        },
        {
          "name": "n_neighbors",
          "label": "Neighbors",
          "description": "Number of nearest neighbors considered.",
          "values": [5, 10, 20]
        },
        {
          "name": "MN_ratio",
          "label": "MN Ratio",
          "description": "Ratio for mid-near pairs.",
          "values": [0.5]
        },
        {
          "name": "FP_ratio",
          "label": "FP Ratio",
          "description": "Ratio for further pairs.",
          "values": [2]
        }
      ]
    },
    {
      "name": "LocalMAP",
      "class": "LocalMAP",
      "params": [
        {
          "name": "n_components",
          "label": "Dimensions",
          "description": "Target number of output dimensions.",
          "values": [2, 3],
          "format": "{val}D"
        },
        {
          "name": "n_neighbors",
          "label": "Neighbors",
          "description": "Number of nearest neighbors considered.",
          "values": [5, 10, 20]
        },
        {
          "name": "MN_ratio",
          "label": "MN Ratio",
          "description": "Ratio for mid-near pairs.",
          "values": [0.5]
        },
        {
          "name": "FP_ratio",
          "label": "FP Ratio",
          "description": "Ratio for further pairs.",
          "values": [2]
        }
      ]
    },
    {
      "name": "UMAP",
      "class": "UMAP",
      "params": [
        {
          "name": "n_components",
          "label": "Dimensions",
          "description": "Target number of output dimensions.",
          "values": [2, 3],
          "format": "{val}D"
        },
        {
          "name": "n_neighbors",
          "label": "Neighbors",
          "description": "The size of the local neighborhood considered when search for the hidden shape.\nLower numbers prioritize local structure, higher numbers global structure.",
          "values": [5, 15, 30]
        },
        {
          "name": "min_dist",
          "label": "Min Distance",
          "description": "How tightly UMAP is allowed to pack points together.\nSmaller values show finer structure, larger ones show broader structure.",
          "values": [0.0, 0.1, 0.5, 0.99]
        }
      ]
    }
  ],

  "clusterers": [
    {
      "name": "KMeans",
      "class": "BestKMeans",
      "params": [
        {
          "name": "k_bounds",
          "label": "Cluster Min/Max",
          "description": "Lower and upper bound for number of clusters to test.",
          "values": [[2, 5]],
          "format": "{val}"
        }
      ]
    },
    {
      "name": "HDBSCANFlat",
      "class": "BestHDBSCANFlat",
      "params": [
        {
          "name": "k_bounds",
          "label": "Cluster Min/Max",
          "description": "Lower and upper bound for number of clusters to test.",
          "values": [[2, 5], [2, 7]],
          "format": "{val}"
        },
        {
          "name": "min_cluster_size",
          "label": "Min Cluster Size",
          "description": "Minimum size of clusters.",
          "values": [5]
        },
        {
          "name": "cluster_selection_method",
          "label": "Selection Method",
          "description": "How clusters are selected.",
          "values": ["leaf", "eom"]
        }
      ]
    }
  ]
}
